{"version":3,"sources":["component/Intrest.js","component/Header.js","component/Slider.js","component/Loan.js","App.js","serviceWorker.js","index.js"],"names":["Intrest","props","state","Grid","container","item","md","xs","this","intrestRate","monthlyPayment","Component","Header","showHistory","AmountSlider","amount","Slider","min","max","valueLabelDisplay","valueLabelFormat","onChange","MonthSlider","month","marks","onChangeCommitted","SliderPage","loading","cacheData","JSON","parse","localStorage","getItem","showError","handlePricingChange","event","value","setState","handleMonths","formatValue","x","undefined","newLoan","formatMonth","fetchHistoryData","closeNav","index","target","id","cache","monthlyPay","LoanAmount","Month","isDataproper","getResponse","axios","get","params","numMonths","then","response","data","interest","interestRate","monthPay","historyData","push","setItem","stringify","closeButton","document","getElementById","style","width","overlayStyle","display","Fragment","className","onClick","openNav","spacing","SnackbarContent","aria-describedby","backgroundColor","position","zIndex","message","action","IconButton","key","aria-label","color","marginTop","type","height","visible","map","ele","i","App","Loan","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sUAwBeA,E,YApBb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,GAFI,E,sEAKjB,OACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,+CACA,4BAAKC,KAAKP,MAAMQ,cAElB,kBAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,+CACA,4BAAKC,KAAKP,MAAMS,sB,GAdJC,aCYPC,EAZA,SAAAX,GAGX,OACI,kBAACE,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrBN,EAAMY,YAAyC,oCAA3B,kD,4CCN5BC,EAAe,SAAAb,GACnB,OACE,kBAACE,EAAA,EAAD,CAAMC,WAAS,GACZH,EAAMY,YACL,kBAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,IAAvB,WACON,EAAMc,SAGb,kBAACZ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,QAGA,kBAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACS,EAAA,EAAD,CACEC,IAAKhB,EAAMgB,IACXC,IAAKjB,EAAMiB,IAEXC,kBAAmB,KACnBC,iBAAkBnB,EAAMmB,iBACxBC,SAAUpB,EAAMoB,YAGpB,kBAAClB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,YASJe,EAAc,SAAArB,GAClB,OACE,kBAACE,EAAA,EAAD,CAAMC,WAAS,GACdH,EAAMY,YAAc,kBAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,IAC3CN,EAAMsB,OAEP,kBAACpB,EAAA,EAAD,CAAMC,WAAS,GACd,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,KAGC,kBAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACS,EAAA,EAAD,CACEC,IAAK,EACLC,IAAK,GAELM,OAAO,EACPL,kBAAmB,KACnBC,iBAAkBnB,EAAMmB,iBACxBC,SAAUpB,EAAMoB,SAChBI,kBAAmBxB,EAAMwB,qBAG7B,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SCyMSmB,E,2MAnPbxB,MAAQ,CACNa,OAAQ,EACRQ,MAAO,EACPN,IAAK,IACLC,IAAK,IACLT,YAAa,KACbC,eAAgB,KAChBiB,SAAS,EACTd,aAAa,EACbe,UAAWC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,GACvDC,WAAW,G,EAGbC,oBAAsB,SAACC,EAAOC,GAE5B,EAAKC,SAAS,CACZtB,OAAQqB,K,EAIZE,aAAe,SAACH,EAAOC,GACrB,EAAKC,SAAS,CACZd,MAAOa,K,EAGXG,YAAc,SAAAC,GACZ,MACQ,IAAN,YADQC,IAAND,EACSA,EAEA,EAAKtC,MAAMe,M,EAI1ByB,QAAU,WACR,EAAKL,SAAS,CACZxB,aAAa,EACbJ,YAAa,KACbC,eAAgB,KAChBK,OAAQ,EACRQ,MAAO,K,EAIXoB,YAAc,SAAAH,GACZ,YAAUC,IAAND,EACKA,EAEA,G,EAIXI,iBAAmB,SAAAT,GACjB,EAAKU,WACL,EAAKR,SAAS,CACZxB,aAAa,IAEf,IAAMiC,EAAQX,EAAMY,OAAOC,GACrBC,EAAQ,EAAK/C,MAAM0B,UACzB,EAAKS,SAAS,CACZ5B,YAAY,GAAD,OAAKwC,EAAMH,GAAOrC,YAAlB,KACXC,eAAe,IAAD,OAAMuC,EAAMH,GAAOI,YACjCnC,OAAQkC,EAAMH,GAAOK,WACrB5B,MAAO0B,EAAMH,GAAOM,S,EAIxBC,aAAe,SAACtC,EAAQQ,GACvB,OAAiB,IAAVA,GAA0B,IAAXR,G,EAGvBuC,YAAc,SAACnB,EAAOC,GAEH,EAAKiB,aAAa,EAAKnD,MAAMa,OAAQqB,IAElD,EAAKC,SAAS,CACVV,SAAS,IAEf4B,IACGC,IAAI,mDAAoD,CACvDC,OAAQ,CACN1C,OAAQ,EAAKb,MAAMa,OACnB2C,UAAWtB,KAGduB,MAAK,SAAAC,GACJ,IAAMC,EAAOD,EAASC,KAChBC,EAAQ,UAAMD,EAAKE,aAAX,KACRC,EAAQ,WAAOH,EAAKnD,eAAeK,QACzC,EAAKsB,SAAS,CACZ5B,YAAaqD,EACbpD,eAAgBsD,EAChBrC,SAAS,IAGX,IAAMsC,EAAc,CAClBxD,YAAaoD,EAAKE,aAClBb,WAAYW,EAAKnD,eAAeK,OAChCoC,WAAY,EAAKjD,MAAMa,OACvBqC,MAAO,EAAKlD,MAAMqB,OAGpB,EAAKrB,MAAM0B,UAAUsC,KAAKD,GAC1BlC,aAAaoC,QAAQ,OAAQtC,KAAKuC,UAAU,EAAKlE,MAAM0B,gBAG3D,EAAKS,SAAS,CACVJ,WAAW,K,EASnBoC,YAAc,WACV,EAAKhC,SAAS,CACVJ,WAAW,K,yEALjBqC,SAASC,eAAe,eAAeC,MAAMC,MAAQ,U,iCASrDH,SAASC,eAAe,eAAeC,MAAMC,MAAQ,M,+BAG7C,IAAD,OACDC,EAAe,CACnBC,QAASnE,KAAKN,MAAMyB,QAAU,QAAU,QAE1C,OACE,kBAAC,IAAMiD,SAAP,KACE,yBAAKC,UAAU,UACZrE,KAAKN,MAAMW,YACV,kBAAC,IAAM+D,SAAP,KACE,4BAAQC,UAAU,UAAUC,QAAStE,KAAKuE,SAA1C,WAGA,4BAAQF,UAAU,UAAUC,QAAStE,KAAKkC,SAA1C,aAKF,4BAAQmC,UAAU,UAAUC,QAAStE,KAAKuE,SAA1C,YAMJ,kBAAC5E,EAAA,EAAD,CAAMC,WAAS,EAAC4E,QAAS,GACvB,kBAAC,EAAD,CAAQnE,YAAaL,KAAKN,MAAMW,cAEhC,kBAACV,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACnBC,KAAKN,MAAMW,YACV,2CAEA,kDAEDL,KAAKN,MAAM+B,UAAY,kBAACgD,EAAA,EAAD,CACtBJ,UAAU,QACVK,mBAAiB,kBACjBV,MAAO,CAACW,gBAAgB,MAAOC,SAAS,WAAYC,OAAO,KAC3DC,QACE,0BAAMtC,GAAG,kBAAkB6B,UAAU,UAAUL,MAAO,CAACW,gBAAiB,QACrE,gCAILI,OAAQ,CACN,kBAACC,EAAA,EAAD,CAAYC,IAAI,QAAQC,aAAW,QAAQC,MAAM,UAAUb,QAAStE,KAAK6D,aACvE,kBAAC,IAAD,CAAWQ,UAAU,cAGtB,KACL,kBAAC,EAAD,CACEL,MAAO,CAAEoB,UAAW,QACpB3E,IAAKT,KAAKN,MAAMe,IAChBC,IAAKV,KAAKN,MAAMgB,IAChBC,kBAAmB,OACnBC,iBAAkBZ,KAAK+B,YACvBlB,SAAUb,KAAK0B,oBACfrB,YAAaL,KAAKN,MAAMW,YACxBE,OAAQP,KAAKN,MAAMa,UAGvB,kBAACZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACnBC,KAAKN,MAAMW,YAAc,qCAAiB,4CAC3C,kBAAC,EAAD,CACE2D,MAAO,CAAEoB,UAAW,QACpB3E,IAAK,EACLC,IAAK,GACLC,kBAAmB,OACnBC,iBAAkBZ,KAAKmC,YACvBtB,SAAUb,KAAK8B,aACfb,kBAAmBjB,KAAK8C,YACxBzC,YAAaL,KAAKN,MAAMW,YACxBU,MAAOf,KAAKN,MAAMqB,WAM1B,kBAACpB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,IACpBE,KAAKN,MAAMW,YACV,wCAEA,oDAKN,kBAAC,EAAD,CACEJ,YAAaD,KAAKN,MAAMO,YACxBC,eAAgBF,KAAKN,MAAMQ,iBAG7B,yBAAKsC,GAAG,UAAUwB,MAAO,CAAEG,QAASD,EAAaC,UAC/C,kBAAC,IAAD,CACEkB,KAAK,YACLF,MAAM,QACNG,OAAQ,GACRrB,MAAO,IACPsB,SAAS,EACTvB,MAAO,CAAEoB,UAAW,YAIxB,yBAAK5C,GAAG,cAAc6B,UAAU,aAC9B,uBAAGA,UAAU,WAAWC,QAAStE,KAAKqC,UAAtC,QAGCrC,KAAKN,MAAM0B,UAAUoE,KAAI,SAACC,EAAKC,GAAN,OACxB,uBAAGT,IAAKS,EAAGlD,GAAIkD,EAAGpB,QAAS,EAAKlC,kBAAhC,OACOsD,EAAI,MAGb,kC,GA7OevF,aCCVwF,MAVf,WACE,OACE,yBAAKtB,UAAU,OACb,4BAAQA,UAAU,cAClB,kBAACuB,EAAD,SCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASrC,SAASC,eAAe,SD0H3C,kBAAmBqC,WACrBA,UAAUC,cAAcC,MAAMnD,MAAK,SAAAoD,GACjCA,EAAaC,kB","file":"static/js/main.c8fd957e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nclass Intrest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <Grid container>\n        <Grid item md={6} xs={6}>\n          <h3>Rate of Intrest</h3>\n          <h4>{this.props.intrestRate}</h4>\n        </Grid>\n        <Grid item md={6} xs={6}>\n          <h3>Monthly Payment</h3>\n          <h4>{this.props.monthlyPayment}</h4>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Intrest;\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\n\nconst Header = props => {\n\n    \n    return (\n        <Grid container>\n            <Grid item md={12} xs={12}>\n            {!props.showHistory ? <h2>Check Your Loan</h2> : <h2>Loan</h2>}\n            </Grid>\n          </Grid>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport { Slider, Grid } from \"@material-ui/core\";\n\nconst AmountSlider = props => {\n  return (\n    <Grid container>\n      {props.showHistory ? (\n        <Grid item md={12} xs={12}>\n          {`$${props.amount}`}\n        </Grid>\n      ) : (\n        <Grid container>\n          <Grid item md={3} xs={3}>\n            $500\n          </Grid>\n          <Grid item md={6} xs={6}>\n            <Slider\n              min={props.min}\n              max={props.max}\n              //value={0}\n              valueLabelDisplay={\"on\"}\n              valueLabelFormat={props.valueLabelFormat}\n              onChange={props.onChange}\n            />\n          </Grid>\n          <Grid item md={3} xs={3}>\n            $5000\n          </Grid>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nconst MonthSlider = props => {\n  return (\n    <Grid container>\n    {props.showHistory ? <Grid item md={12} xs={12}>\n    {props.month}\n    </Grid> :\n    <Grid container>\n     <Grid item md={3} xs={3}>\n        6\n      </Grid>\n      <Grid item md={6} xs={6}>\n        <Slider\n          min={6}\n          max={24}\n          // value={12}\n          marks={true}\n          valueLabelDisplay={\"on\"}\n          valueLabelFormat={props.valueLabelFormat}\n          onChange={props.onChange}\n          onChangeCommitted={props.onChangeCommitted}\n        />\n      </Grid>\n      <Grid item md={3} xs={3}>\n        24\n      </Grid>\n    </Grid>\n}\n     \n    </Grid>\n  );\n};\n\nexport { AmountSlider, MonthSlider };\n","import React, { Component } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Loader from \"react-loader-spinner\";\nimport Interest from \"./Intrest\";\nimport Header from \"./Header\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport { AmountSlider, MonthSlider } from \"./Slider\";\n\nclass SliderPage extends Component {\n  state = {\n    amount: 0,\n    month: 0,\n    min: 500,\n    max: 5000,\n    intrestRate: null,\n    monthlyPayment: null,\n    loading: false,\n    showHistory: false,\n    cacheData: JSON.parse(localStorage.getItem(\"data\")) || [],\n    showError: false\n  };\n\n  handlePricingChange = (event, value) => {\n    // console.log(value);\n    this.setState({\n      amount: value\n    });\n  };\n\n  handleMonths = (event, value) => {\n    this.setState({\n      month: value\n    });\n  };\n  formatValue = x => {\n    if (x !== undefined) {\n      return `$${x}`;\n    } else {\n      return `$${this.state.min}`;\n    }\n  };\n\n  newLoan = () => {\n    this.setState({\n      showHistory: false,\n      intrestRate: null,\n      monthlyPayment: null,\n      amount: 0,\n      month: 0\n    });\n  };\n\n  formatMonth = x => {\n    if (x !== undefined) {\n      return x;\n    } else {\n      return 6;\n    }\n  };\n\n  fetchHistoryData = event => {\n    this.closeNav();\n    this.setState({\n      showHistory: true\n    });\n    const index = event.target.id;\n    const cache = this.state.cacheData;\n    this.setState({\n      intrestRate: `${cache[index].intrestRate}%`,\n      monthlyPayment: `$${cache[index].monthlyPay}`,\n      amount: cache[index].LoanAmount,\n      month: cache[index].Month\n    });\n  };\n\n  isDataproper = (amount, month) => {\n   return month !== 0 && amount !== 0 ? true : false;\n  };\n\n  getResponse = (event, value) => {\n\n    const validate = this.isDataproper(this.state.amount, value);\n    if (validate) {\n        this.setState({\n            loading: true\n          });\n      axios\n        .get(\"https://ftl-frontend-test.herokuapp.com/interest\", {\n          params: {\n            amount: this.state.amount,\n            numMonths: value\n          }\n        })\n        .then(response => {\n          const data = response.data;\n          const interest = `${data.interestRate}%`;\n          const monthPay = `$${data.monthlyPayment.amount}`;\n          this.setState({\n            intrestRate: interest,\n            monthlyPayment: monthPay,\n            loading: false\n          });\n\n          const historyData = {\n            intrestRate: data.interestRate,\n            monthlyPay: data.monthlyPayment.amount,\n            LoanAmount: this.state.amount,\n            Month: this.state.month\n          };\n\n          this.state.cacheData.push(historyData);\n          localStorage.setItem(\"data\", JSON.stringify(this.state.cacheData));\n        });\n    } else {\n      this.setState({\n          showError: true\n      })\n    }\n  };\n\n  openNav() {\n    document.getElementById(\"mySidepanel\").style.width = \"250px\";\n  }\n\n  closeButton = () => {\n      this.setState({\n          showError: false\n      })\n      }\n  closeNav() {\n    document.getElementById(\"mySidepanel\").style.width = \"0\";\n  }\n\n  render() {\n    const overlayStyle = {\n      display: this.state.loading ? \"block\" : \"none\"\n    };\n    return (\n      <React.Fragment>\n        <div className=\"topnav\">\n          {this.state.showHistory ? (\n            <React.Fragment>\n              <button className=\"history\" onClick={this.openNav}>\n                History\n              </button>\n              <button className=\"newLoan\" onClick={this.newLoan}>\n                New Loan\n              </button>\n            </React.Fragment>\n          ) : (\n            <button className=\"history\" onClick={this.openNav}>\n              History\n            </button>\n          )}\n        </div>\n\n        <Grid container spacing={0}>\n          <Header showHistory={this.state.showHistory} />\n\n          <Grid container>\n            <Grid item md={6} xs={12}>\n              {this.state.showHistory ? (\n                <h3>Loan Amount</h3>\n              ) : (\n                <h3>Select Loan Amount</h3>\n              )}\n              {this.state.showError ? <SnackbarContent\n                className=\"Error\"\n                aria-describedby=\"client-snackbar\"\n                style={{backgroundColor:\"red\", position:\"absolute\", zIndex:\"4\"}}\n                message={\n                  <span id=\"client-snackbar\" className=\"message\" style={{backgroundColor: \"red\"}}>\n                    {\"Please select amount of Loan\"}\n                  </span>\n                }\n                \n                action={[\n                  <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={this.closeButton}>\n                    <CloseIcon className=\"close\" />\n                  </IconButton>\n                ]}\n              /> : null}  \n              <AmountSlider\n                style={{ marginTop: \"20px\" }}\n                min={this.state.min}\n                max={this.state.max}\n                valueLabelDisplay={\"auto\"}\n                valueLabelFormat={this.formatValue}\n                onChange={this.handlePricingChange}\n                showHistory={this.state.showHistory}\n                amount={this.state.amount}\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              {this.state.showHistory ? <h3>Month</h3> : <h3>Select Month</h3>}\n              <MonthSlider\n                style={{ marginTop: \"20px\" }}\n                min={6}\n                max={24}\n                valueLabelDisplay={\"auto\"}\n                valueLabelFormat={this.formatMonth}\n                onChange={this.handleMonths}\n                onChangeCommitted={this.getResponse}\n                showHistory={this.state.showHistory}\n                month={this.state.month}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            {this.state.showHistory ? (\n              <h2>Interest</h2>\n            ) : (\n              <h2>Calculate Interest</h2>\n            )}\n          </Grid>\n        </Grid>\n\n        <Interest\n          intrestRate={this.state.intrestRate}\n          monthlyPayment={this.state.monthlyPayment}\n        />\n\n        <div id=\"overlay\" style={{ display: overlayStyle.display }}>\n          <Loader\n            type=\"ThreeDots\"\n            color=\"white\"\n            height={40}\n            width={100}\n            visible={true}\n            style={{ marginTop: \"400px\" }}\n          />\n        </div>\n\n        <div id=\"mySidepanel\" className=\"sidepanel\">\n          <p className=\"closebtn\" onClick={this.closeNav}>\n            &times;\n          </p>\n          {this.state.cacheData.map((ele, i) => (\n            <p key={i} id={i} onClick={this.fetchHistoryData}>\n              Loan{i + 1}\n            </p>\n          ))}\n          <p></p>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SliderPage;\n","import React from 'react';\nimport './App.css';\nimport LoanApp from './component/Loan'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <LoanApp/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}